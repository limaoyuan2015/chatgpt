<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.szmengran</groupId>
        <artifactId>chatgpt-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>chatgpt-start</artifactId>
    <packaging>jar</packaging>
    <name>start</name>

    <dependencies>
        <dependency>
            <groupId>com.szmengran</groupId>
            <artifactId>chatgpt-adapter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.graalvm.buildtools</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>0.9.19</version>
                <extensions>true</extensions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>3.0.4</version>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <executions>
                    <!-- 					 绑定生命周期:当执行package时执行goals中的jib命令-->
                    <execution>
                        <!--                        <id>latest</id>-->
                        <!--<phase>package</phase>-->
                        <phase>package</phase>
                        <goals>
                            <!--                            buildTar:只在本地生成tar压缩包  : build:生成并上传至你配置的docker仓库-->
                            <goal>build</goal>
                            <!--                            <goal>buildTar</goal>-->
                        </goals>
                    </execution>
        
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
